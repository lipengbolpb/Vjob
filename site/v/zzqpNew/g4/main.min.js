var Countdown = function(t) {
    function e(e) {
        void 0 === e && (e = null),
        t.call(this),
        this._runTime = 3,
        this.touchEnabled = !0,
        this.once(egret.Event.ADDED_TO_STAGE, this.createView, this),
        this._textureNames = e
    }
    __extends(e, t);
    var i = (__define, e),
    s = i.prototype;
    return s.createView = function() {
        this.graphics.beginFill(0, .3),
        this.graphics.drawRect(0, 0, this.stage.stageWidth, this.stage.stageHeight),
        this.graphics.endFill(),
        this._info = new egret.TextField,
        this._info.width = 300,
        this._info.height = 300,
        this._info.size = 200,
        this._info.textAlign = "center",
        this._info.verticalAlign = egret.VerticalAlign.MIDDLE,
        this._info.strokeColor = 16711680,
        this._info.stroke = 3,
        this._info.x = this.width - this._info.width >> 1,
        this._info.y = this.height - this._info.height >> 1,
        this._bmp = new egret.Bitmap,
        null == this._textureNames ? this.addChild(this._info) : this.addChild(this._bmp),
        this._timer = new egret.Timer(1e3),
        this._timer.addEventListener(egret.TimerEvent.TIMER, this.onTimer, this)
    },
    s.run = function() {
        this._timer.running || (this._timer.reset(), this._timer.start(), this._info.text = this._runTime + "", null != this._textureNames && (this._bmp.texture = RES.getRes(this._textureNames[0])))
    },
    s.onTimer = function(t) {
        return this._timer.currentCount > this._runTime ? (this._timer.stop(), void this.dispatchEventWith("CountdownComplete")) : void(null != this._textureNames ? this._bmp.texture = RES.getRes(this._textureNames[this._timer.currentCount]) : this._info.text = this._runTime - this._timer.currentCount + "")
    },
    e
} (egret.Sprite);
egret.registerClass(Countdown, "Countdown");
var Game = function(t) {
    function e() {
        t.call(this),
        this._selectArr = [],
        this.once(egret.Event.ADDED_TO_STAGE, this.init, this)
    }
    __extends(e, t);
    var i = __define,
    s = e,
    h = s.prototype;
    return i(e, "instance",
    function() {
        return this._instance || (this._instance = new e),
        this._instance
    }),
    h.init = function() {
        GameSound.sound_hit1 = RES.getRes("m1"),
        GameSound.sound_hit2 = RES.getRes("hit"),
        this.onInit(),
        window.gInitialize()
    },
    h.onInit = function() {
        var t = this,
        e = new egret.Bitmap(RES.getRes("bg"));
        e.height = this.stage.stageHeight,
        this.addChild(e),
        this._home = new egret.Sprite,
        this._home.addChild(new egret.Bitmap(RES.getRes("home")));
        var i = new egret.Bitmap(RES.getRes("startG"));
        i.x = 100,
        i.y = this.stage.stageHeight - i.height - 160,
        i.touchEnabled = !0,
        i.addEventListener(egret.TouchEvent.TOUCH_TAP,
        function() {
            GameSound.sound_hit2.play(0, 1),
            t._home.visible = !1,
            t._select.visible = !0
        },
        this),
        this._home.addChild(i);
        var s = new egret.Bitmap(RES.getRes("back"));
        s.x = this.stage.stageWidth - i.width - 100,
        s.y = this.stage.stageHeight - s.height - 160,
        s.touchEnabled = !0,
        s.addEventListener(egret.TouchEvent.TOUCH_TAP,
        function() {
            GameSound.sound_hit2.play(0, 1),
            window.backHome()
        },
        this),
        this._home.addChild(s),
        this._select = new egret.Sprite,
        this._select.addChild(new egret.Bitmap(RES.getRes("select"))),
        this._select.visible = !1;
        var h = new egret.Bitmap(RES.getRes("select1"));
        h.name = "s1",
        h.touchEnabled = !0,
        h.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this);
        var n = new egret.Bitmap(RES.getRes("select2"));
        n.name = "s2",
        n.touchEnabled = !0,
        n.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this);
        var a = new egret.Bitmap(RES.getRes("select3"));
        a.name = "s3",
        a.touchEnabled = !0,
        a.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onTouch, this),
        h.x = 135,
        h.y = 160,
        n.x = this.stage.stageWidth - n.width - 135,
        n.y = 160,
        a.x = this.stage.stageWidth - a.width >> 1,
        a.y = h.y + h.height + 60,
        this._select.addChild(h),
        this._select.addChild(n),
        this._select.addChild(a),
        this._kp = new egret.Sprite,
        this._kp.addChild(new egret.Bitmap(RES.getRes("kp"))),
        this._kp.visible = !1;
        var r = new egret.Bitmap(RES.getRes("start"));
        r.name = "start",
        r.x = 100,
        r.y = this.stage.stageHeight - r.height - 180,
        r.touchEnabled = !0,
        r.visible = !1,
        r.addEventListener(egret.TouchEvent.TOUCH_TAP, this.kp, this),
        this._start = r;
        var o = new egret.Bitmap(RES.getRes("again"));
        o.x = 100,
        o.name = "again",
        o.y = this.stage.stageHeight - o.height - 180,
        o.touchEnabled = !0,
        o.visible = !1,
        o.addEventListener(egret.TouchEvent.TOUCH_TAP, this.kp, this),
        this._again = o;
        var d = new egret.Bitmap(RES.getRes("back"));
        d.x = this.stage.stageWidth - d.width - 100,
        d.y = this.stage.stageHeight - d.height - 180,
        d.touchEnabled = !0,
        d.addEventListener(egret.TouchEvent.TOUCH_TAP, this.backHome, this),
        this._pai = new egret.Bitmap,
        this._pai.x = this.stage.stageWidth / 2,
        this._pai.y = 185,
        this._kp.addChild(this._pai),
        this._paiCon = new egret.Sprite,
        this._paiCon.y = this._pai.y,
        this._paiCon.visible = !1,
        this._p1 = new egret.Bitmap(RES.getRes("p1")),
        this._p1.width = 310,
        this._p1.height = 441,
        this._p2 = new egret.Bitmap(RES.getRes("p2")),
        this._p2.width = 310,
        this._p2.height = 441,
        this._p3 = new egret.Bitmap(RES.getRes("p3")),
        this._p3.width = 310,
        this._p3.height = 441,
        this._p1.visible = !1,
        this._p2.visible = !1,
        this._p3.visible = !1,
        this._paiCon.addChild(this._p1),
        this._paiCon.addChild(this._p2),
        this._paiCon.addChild(this._p3),
        this._kp.addChild(this._paiCon),
        this._kp.addChild(r),
        this._kp.addChild(o),
        this._kp.addChild(d),
        this.addChild(this._kp),
        this.addChild(this._select),
        this.addChild(this._home);
        for (var g = 1; 52 >= g; g++) this._selectArr.push(g)
    },
    h.start = function() {
        this._home.visible = !0
    },
    h.reset = function() {},
    h.reStart = function(t) {},
    h.onTouch = function(t) {
        switch (t.target.name) {
        case "s1":
            this._type = 1;
            break;
        case "s2":
            this._type = 2;
            break;
        case "s3":
            this._type = 3
        }
        this._select.visible = !1,
        this.tokp()
    },
    h.tokp = function() {
        switch (this._kp.visible = !0, this._pai.visible = !0, this._paiCon.visible = !1, this._type) {
        case 1:
            this._pai.texture = RES.getRes("pai1"),
            this._p1.x = this.stage.stageWidth - this._p1.width >> 1,
            this._p1.visible = !0,
            this._p2.visible = !1,
            this._p3.visible = !1;
            break;
        case 2:
            this._pai.texture = RES.getRes("pai2"),
            this._p1.x = (this.stage.stageWidth - this._p1.width >> 1) - 45,
            this._p2.x = (this.stage.stageWidth - this._p2.width >> 1) + 45,
            this._p1.visible = !0,
            this._p2.visible = !0,
            this._p3.visible = !1;
            break;
        case 3:
            this._pai.texture = RES.getRes("pai3"),
            this._p1.x = (this.stage.stageWidth - this._p1.width >> 1) - 45,
            this._p2.x = this.stage.stageWidth - this._p2.width >> 1,
            this._p3.x = (this.stage.stageWidth - this._p3.width >> 1) + 45,
            this._p1.visible = !0,
            this._p2.visible = !0,
            this._p3.visible = !0
        }
        this._pai.anchorOffsetX = this._pai.width / 2,
        this._start.visible = !0,
        this._again.visible = !1
    },
    h.kp = function(t) {
        if ("start" == t.target.name) {
            this._start.visible = !1,
            this._again.visible = !0,
            this._pai.visible = !1,
            this._paiCon.visible = !0;
            var e = this.rSort();
            this._p1.texture = RES.getRes("p" + e[0]),
            this._p2.texture = RES.getRes("p" + e[1]),
            this._p3.texture = RES.getRes("p" + e[2]),
            GameSound.sound_hit1.play(0, 1)
        } else this._start.visible = !0,
        this._again.visible = !1,
        this._pai.visible = !0,
        this._paiCon.visible = !1,
        GameSound.sound_hit2.play(0, 1);
        console.log(this._selectArr.length)
    },
    h.backHome = function() {
        this._kp.visible = !1,
        this._home.visible = !0,
        GameSound.sound_hit2.play(0, 1)
    },
    h.rSort = function() {
        for (var t = [], e = 0, i = 0; i < this._type; i++) e = Math.floor(Math.random() * this._selectArr.length),
        t.push(this._selectArr[e]),
        this._selectArr.splice(e, 1);
        for (var s = 0; s < t.length; s++) this._selectArr.push(t[s]);
        return t
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(Game, "Game");
var GameSound = function() {
    function t() {}
    var e = (__define, t);
    e.prototype;
    return t.setSoundBG = function(e) {
        t._soundBG = e,
        t.onSoundComplete(null)
    },
    t.onSoundComplete = function(e) {
        t._soundChannel && t._soundChannel.stop(),
        t._soundChannel = t._soundBG.play(0, 0)
    },
    t
} ();
egret.registerClass(GameSound, "GameSound");
var LoadingUI = function(t) {
    function e() {
        t.call(this),
        this.graphics.beginFill(16777215, 1),
        this.graphics.drawRect(0, 0, Main.stage.stageWidth, Main.stage.stageHeight),
        this.graphics.endFill(),
        this.createView()
    }
    __extends(e, t);
    var i = (__define, e),
    s = i.prototype;
    return s.createView = function() {
        this.loadingshapedemo = new egret.Shape,
        this.loadingshapedemo.graphics.lineStyle(20, 15724527),
        this.loadingshapedemo.graphics.drawArc(Main.stage.stageWidth / 2, Main.stage.stageHeight / 2, 200, 0, 2 * Math.PI, !1),
        this.loadingshapedemo.graphics.endFill(),
        this.addChild(this.loadingshapedemo),
        this.textField = new egret.TextField,
        this.textField.size = 40,
        this.textField.y = 300,
        this.textField.height = 100,
        this.textField.textAlign = egret.HorizontalAlign.CENTER,
        this.textField.verticalAlign = egret.VerticalAlign.MIDDLE,
        this.textField.text = "loading...",
        this.textField.textColor = 0,
        this.textField.bold = !0,
        this.textField.x = Main.stage.stageWidth - this.textField.width >> 1,
        this.textField.y = Main.stage.stageHeight - this.textField.height >> 1,
        this.addChild(this.textField),
        this.loadingshape = new egret.Shape,
        this.addChild(this.loadingshape)
    },
    s.setProgress = function(t, e) {
        this.loadingshape.graphics.clear(),
        this.loadingshape.graphics.lineStyle(20, 13970206),
        this.loadingshape.graphics.drawArc(Main.stage.stageWidth / 2, Main.stage.stageHeight / 2, 200, 0, 2 * Math.PI * t / e, !1),
        this.loadingshape.graphics.endFill()
    },
    e
} (egret.Sprite);
egret.registerClass(LoadingUI, "LoadingUI");
var Main = function(t) {
    function e() {
        t.call(this),
        this.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this)
    }
    __extends(e, t);
    var i = (__define, e),
    s = i.prototype;
    return s.onAddToStage = function(t) {
        e.stage = this.stage,
        RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.loadConfig("resource/default.res.txt", "resource/")
    },
    s.onConfigComplete = function(t) {
        RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this),
        RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
        RES.loadGroup("preload")
    },
    s.onResourceLoadComplete = function(t) {
        "preload" == t.groupName && (RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this), RES.removeEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadError, this), RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this), this.createGameScene())
    },
    s.onResourceLoadError = function(t) {
        console.warn("Group:" + t.groupName + " has failed to load"),
        this.onResourceLoadComplete(t)
    },
    s.onResourceProgress = function(t) {
        "preload" == t.groupName
    },
    s.createGameScene = function() {
        this.addChild(Game.instance)
    },
    e
} (egret.DisplayObjectContainer);
egret.registerClass(Main, "Main");
var Tips = function(t) {
    function e() {
        t.call(this),
        this.graphics.beginFill(0, .75),
        this.graphics.drawRect(0, 0, Main.stage.stageWidth, Main.stage.stageHeight),
        this.graphics.endFill();
        var e = new egret.Bitmap(RES.getRes("tips"));
        e.x = this.width - e.width >> 1,
        e.y = this.height - e.height >> 1,
        this.addChild(e),
        this.touchEnabled = !0
    }
    __extends(e, t);
    var i = (__define, e);
    i.prototype;
    return e
} (egret.Sprite);
egret.registerClass(Tips, "Tips");